// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: protos/protos.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 常量错误
type ErrorCode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorCode) Reset() {
	*x = ErrorCode{}
	mi := &file_protos_protos_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorCode) ProtoMessage() {}

func (x *ErrorCode) ProtoReflect() protoreflect.Message {
	mi := &file_protos_protos_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorCode.ProtoReflect.Descriptor instead.
func (*ErrorCode) Descriptor() ([]byte, []int) {
	return file_protos_protos_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorCode) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorCode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ErrorCode) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Mysql struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Dsn           string                 `protobuf:"bytes,2,opt,name=dsn,proto3" json:"dsn,omitempty"`
	MaxIdle       int64                  `protobuf:"varint,4,opt,name=max_idle,json=maxIdle,proto3" json:"max_idle,omitempty"`
	MaxOpen       int64                  `protobuf:"varint,5,opt,name=max_open,json=maxOpen,proto3" json:"max_open,omitempty"`
	MaxLifetime   int64                  `protobuf:"varint,6,opt,name=max_lifetime,json=maxLifetime,proto3" json:"max_lifetime,omitempty"`
	IsDebug       bool                   `protobuf:"varint,7,opt,name=is_debug,json=isDebug,proto3" json:"is_debug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mysql) Reset() {
	*x = Mysql{}
	mi := &file_protos_protos_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mysql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mysql) ProtoMessage() {}

func (x *Mysql) ProtoReflect() protoreflect.Message {
	mi := &file_protos_protos_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mysql.ProtoReflect.Descriptor instead.
func (*Mysql) Descriptor() ([]byte, []int) {
	return file_protos_protos_proto_rawDescGZIP(), []int{1}
}

func (x *Mysql) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Mysql) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *Mysql) GetMaxIdle() int64 {
	if x != nil {
		return x.MaxIdle
	}
	return 0
}

func (x *Mysql) GetMaxOpen() int64 {
	if x != nil {
		return x.MaxOpen
	}
	return 0
}

func (x *Mysql) GetMaxLifetime() int64 {
	if x != nil {
		return x.MaxLifetime
	}
	return 0
}

func (x *Mysql) GetIsDebug() bool {
	if x != nil {
		return x.IsDebug
	}
	return false
}

// 参考设置：
// dial_timeout = 1s
// read_timeout = 50ms
// pool_timeout = 150ms
// min_idle_conn = 100
// pool_size = 50
// max_connections = 150
// max_idle_conn = 150
type Redis struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Network        string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr           string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Password       string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Db             int32                  `protobuf:"varint,4,opt,name=db,proto3" json:"db,omitempty"`
	ReadTimeout    string                 `protobuf:"bytes,5,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`             // 影响pool_timeout时间
	WriteTimeout   string                 `protobuf:"bytes,6,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`          // =0 时，会被赋值read_timeout参数
	DialTimeout    string                 `protobuf:"bytes,7,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout,omitempty"`             // 链接超时时间
	MinIdleConn    int32                  `protobuf:"varint,8,opt,name=min_idle_conn,json=minIdleConn,proto3" json:"min_idle_conn,omitempty"`          // 最小空闲链接
	PoolTimeout    string                 `protobuf:"bytes,9,opt,name=pool_timeout,json=poolTimeout,proto3" json:"pool_timeout,omitempty"`             // client获取空闲链接的超时时间，read_timeout >0 时，pool_timeout = read_timeout + 1s
	MaxIdleTimeout string                 `protobuf:"bytes,10,opt,name=max_idle_timeout,json=maxIdleTimeout,proto3" json:"max_idle_timeout,omitempty"` // 空闲链接最长存活时间
	MaxConnAge     string                 `protobuf:"bytes,11,opt,name=max_conn_age,json=maxConnAge,proto3" json:"max_conn_age,omitempty"`             // 链接最大复用时间
	MaxRetries     int32                  `protobuf:"varint,12,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	PoolSize       int32                  `protobuf:"varint,13,opt,name=pool_size,json=poolSize,proto3" json:"pool_size,omitempty"`                   // 链接池大小
	MaxConnections int32                  `protobuf:"varint,14,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"` // 链接池满后，可以建立的最大链接数
	MaxIdleConn    int32                  `protobuf:"varint,15,opt,name=max_idle_conn,json=maxIdleConn,proto3" json:"max_idle_conn,omitempty"`        // 最大空闲链接
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Redis) Reset() {
	*x = Redis{}
	mi := &file_protos_protos_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redis) ProtoMessage() {}

func (x *Redis) ProtoReflect() protoreflect.Message {
	mi := &file_protos_protos_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redis.ProtoReflect.Descriptor instead.
func (*Redis) Descriptor() ([]byte, []int) {
	return file_protos_protos_proto_rawDescGZIP(), []int{2}
}

func (x *Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Redis) GetReadTimeout() string {
	if x != nil {
		return x.ReadTimeout
	}
	return ""
}

func (x *Redis) GetWriteTimeout() string {
	if x != nil {
		return x.WriteTimeout
	}
	return ""
}

func (x *Redis) GetDialTimeout() string {
	if x != nil {
		return x.DialTimeout
	}
	return ""
}

func (x *Redis) GetMinIdleConn() int32 {
	if x != nil {
		return x.MinIdleConn
	}
	return 0
}

func (x *Redis) GetPoolTimeout() string {
	if x != nil {
		return x.PoolTimeout
	}
	return ""
}

func (x *Redis) GetMaxIdleTimeout() string {
	if x != nil {
		return x.MaxIdleTimeout
	}
	return ""
}

func (x *Redis) GetMaxConnAge() string {
	if x != nil {
		return x.MaxConnAge
	}
	return ""
}

func (x *Redis) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *Redis) GetPoolSize() int32 {
	if x != nil {
		return x.PoolSize
	}
	return 0
}

func (x *Redis) GetMaxConnections() int32 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *Redis) GetMaxIdleConn() int32 {
	if x != nil {
		return x.MaxIdleConn
	}
	return 0
}

type Elasticsearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addresses     []string               `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	IsDebug       bool                   `protobuf:"varint,4,opt,name=is_debug,json=isDebug,proto3" json:"is_debug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Elasticsearch) Reset() {
	*x = Elasticsearch{}
	mi := &file_protos_protos_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Elasticsearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Elasticsearch) ProtoMessage() {}

func (x *Elasticsearch) ProtoReflect() protoreflect.Message {
	mi := &file_protos_protos_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Elasticsearch.ProtoReflect.Descriptor instead.
func (*Elasticsearch) Descriptor() ([]byte, []int) {
	return file_protos_protos_proto_rawDescGZIP(), []int{3}
}

func (x *Elasticsearch) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *Elasticsearch) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Elasticsearch) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Elasticsearch) GetIsDebug() bool {
	if x != nil {
		return x.IsDebug
	}
	return false
}

type Kafka struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Servers         string                 `protobuf:"bytes,1,opt,name=servers,proto3" json:"servers,omitempty"`
	Topic           string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Topics          []string               `protobuf:"bytes,3,rep,name=topics,proto3" json:"topics,omitempty"`
	Protocol        string                 `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Mechanism       string                 `protobuf:"bytes,5,opt,name=mechanism,proto3" json:"mechanism,omitempty"`
	CaLocation      string                 `protobuf:"bytes,6,opt,name=ca_location,json=caLocation,proto3" json:"ca_location,omitempty"`
	Username        string                 `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
	Password        string                 `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	GroupId         string                 `protobuf:"bytes,9,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Enable          bool                   `protobuf:"varint,10,opt,name=enable,proto3" json:"enable,omitempty"`
	ConfigMap       map[string]string      `protobuf:"bytes,11,rep,name=config_map,json=configMap,proto3" json:"config_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AutoOffsetReset string                 `protobuf:"bytes,12,opt,name=auto_offset_reset,json=autoOffsetReset,proto3" json:"auto_offset_reset,omitempty"` // smallest, earliest, beginning, largest, latest 消费位点
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Kafka) Reset() {
	*x = Kafka{}
	mi := &file_protos_protos_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kafka) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kafka) ProtoMessage() {}

func (x *Kafka) ProtoReflect() protoreflect.Message {
	mi := &file_protos_protos_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kafka.ProtoReflect.Descriptor instead.
func (*Kafka) Descriptor() ([]byte, []int) {
	return file_protos_protos_proto_rawDescGZIP(), []int{4}
}

func (x *Kafka) GetServers() string {
	if x != nil {
		return x.Servers
	}
	return ""
}

func (x *Kafka) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Kafka) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Kafka) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Kafka) GetMechanism() string {
	if x != nil {
		return x.Mechanism
	}
	return ""
}

func (x *Kafka) GetCaLocation() string {
	if x != nil {
		return x.CaLocation
	}
	return ""
}

func (x *Kafka) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Kafka) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Kafka) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Kafka) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Kafka) GetConfigMap() map[string]string {
	if x != nil {
		return x.ConfigMap
	}
	return nil
}

func (x *Kafka) GetAutoOffsetReset() string {
	if x != nil {
		return x.AutoOffsetReset
	}
	return ""
}

type Mongodb struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Mode          string                 `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	IsDebug       bool                   `protobuf:"varint,3,opt,name=is_debug,json=isDebug,proto3" json:"is_debug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mongodb) Reset() {
	*x = Mongodb{}
	mi := &file_protos_protos_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mongodb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mongodb) ProtoMessage() {}

func (x *Mongodb) ProtoReflect() protoreflect.Message {
	mi := &file_protos_protos_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mongodb.ProtoReflect.Descriptor instead.
func (*Mongodb) Descriptor() ([]byte, []int) {
	return file_protos_protos_proto_rawDescGZIP(), []int{5}
}

func (x *Mongodb) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Mongodb) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Mongodb) GetIsDebug() bool {
	if x != nil {
		return x.IsDebug
	}
	return false
}

type TracerExporter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        string                 `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Sample        float64                `protobuf:"fixed64,2,opt,name=sample,proto3" json:"sample,omitempty"` // 采样率，在0～1 之间，0 表示不采样，1 表示完全采样
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TracerExporter) Reset() {
	*x = TracerExporter{}
	mi := &file_protos_protos_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracerExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerExporter) ProtoMessage() {}

func (x *TracerExporter) ProtoReflect() protoreflect.Message {
	mi := &file_protos_protos_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerExporter.ProtoReflect.Descriptor instead.
func (*TracerExporter) Descriptor() ([]byte, []int) {
	return file_protos_protos_proto_rawDescGZIP(), []int{6}
}

func (x *TracerExporter) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *TracerExporter) GetSample() float64 {
	if x != nil {
		return x.Sample
	}
	return 0
}

type OssConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Endpoint        string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKeyId     string                 `protobuf:"bytes,2,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	AccessKeySecret string                 `protobuf:"bytes,3,opt,name=access_key_secret,json=accessKeySecret,proto3" json:"access_key_secret,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OssConfig) Reset() {
	*x = OssConfig{}
	mi := &file_protos_protos_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OssConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssConfig) ProtoMessage() {}

func (x *OssConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protos_protos_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssConfig.ProtoReflect.Descriptor instead.
func (*OssConfig) Descriptor() ([]byte, []int) {
	return file_protos_protos_proto_rawDescGZIP(), []int{7}
}

func (x *OssConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *OssConfig) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *OssConfig) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

type Logger struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                                // 日志文件存储位置
	Level         string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`                              // 日志级别
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`                        // 日志文件
	MaxSize       int32                  `protobuf:"varint,4,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`          // 单个日志文件最大大小,单位MB,不设置为不限大小
	MaxAge        int32                  `protobuf:"varint,5,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`             // 日志保留时常,单位天,不设置则永久保存
	IsCompress    bool                   `protobuf:"varint,6,opt,name=is_compress,json=isCompress,proto3" json:"is_compress,omitempty"` // 保持文件是否进行压缩存储,压缩后,使用 gunzip 进行解压
	BackupNums    int32                  `protobuf:"varint,7,opt,name=backup_nums,json=backupNums,proto3" json:"backup_nums,omitempty"` // 最大保持日志文件数,不设置,则不限制
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logger) Reset() {
	*x = Logger{}
	mi := &file_protos_protos_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger) ProtoMessage() {}

func (x *Logger) ProtoReflect() protoreflect.Message {
	mi := &file_protos_protos_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger.ProtoReflect.Descriptor instead.
func (*Logger) Descriptor() ([]byte, []int) {
	return file_protos_protos_proto_rawDescGZIP(), []int{8}
}

func (x *Logger) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Logger) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Logger) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Logger) GetMaxSize() int32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *Logger) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *Logger) GetIsCompress() bool {
	if x != nil {
		return x.IsCompress
	}
	return false
}

func (x *Logger) GetBackupNums() int32 {
	if x != nil {
		return x.BackupNums
	}
	return 0
}

var File_protos_protos_proto protoreflect.FileDescriptor

const file_protos_protos_proto_rawDesc = "" +
	"\n" +
	"\x13protos/protos.proto\x12\x06protos\"O\n" +
	"\tErrorCode\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xa5\x01\n" +
	"\x05Mysql\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x12\x10\n" +
	"\x03dsn\x18\x02 \x01(\tR\x03dsn\x12\x19\n" +
	"\bmax_idle\x18\x04 \x01(\x03R\amaxIdle\x12\x19\n" +
	"\bmax_open\x18\x05 \x01(\x03R\amaxOpen\x12!\n" +
	"\fmax_lifetime\x18\x06 \x01(\x03R\vmaxLifetime\x12\x19\n" +
	"\bis_debug\x18\a \x01(\bR\aisDebug\"\xea\x03\n" +
	"\x05Redis\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x0e\n" +
	"\x02db\x18\x04 \x01(\x05R\x02db\x12!\n" +
	"\fread_timeout\x18\x05 \x01(\tR\vreadTimeout\x12#\n" +
	"\rwrite_timeout\x18\x06 \x01(\tR\fwriteTimeout\x12!\n" +
	"\fdial_timeout\x18\a \x01(\tR\vdialTimeout\x12\"\n" +
	"\rmin_idle_conn\x18\b \x01(\x05R\vminIdleConn\x12!\n" +
	"\fpool_timeout\x18\t \x01(\tR\vpoolTimeout\x12(\n" +
	"\x10max_idle_timeout\x18\n" +
	" \x01(\tR\x0emaxIdleTimeout\x12 \n" +
	"\fmax_conn_age\x18\v \x01(\tR\n" +
	"maxConnAge\x12\x1f\n" +
	"\vmax_retries\x18\f \x01(\x05R\n" +
	"maxRetries\x12\x1b\n" +
	"\tpool_size\x18\r \x01(\x05R\bpoolSize\x12'\n" +
	"\x0fmax_connections\x18\x0e \x01(\x05R\x0emaxConnections\x12\"\n" +
	"\rmax_idle_conn\x18\x0f \x01(\x05R\vmaxIdleConn\"\x80\x01\n" +
	"\rElasticsearch\x12\x1c\n" +
	"\taddresses\x18\x01 \x03(\tR\taddresses\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x19\n" +
	"\bis_debug\x18\x04 \x01(\bR\aisDebug\"\xbc\x03\n" +
	"\x05Kafka\x12\x18\n" +
	"\aservers\x18\x01 \x01(\tR\aservers\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12\x16\n" +
	"\x06topics\x18\x03 \x03(\tR\x06topics\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\x12\x1c\n" +
	"\tmechanism\x18\x05 \x01(\tR\tmechanism\x12\x1f\n" +
	"\vca_location\x18\x06 \x01(\tR\n" +
	"caLocation\x12\x1a\n" +
	"\busername\x18\a \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\b \x01(\tR\bpassword\x12\x19\n" +
	"\bgroup_id\x18\t \x01(\tR\agroupId\x12\x16\n" +
	"\x06enable\x18\n" +
	" \x01(\bR\x06enable\x12;\n" +
	"\n" +
	"config_map\x18\v \x03(\v2\x1c.protos.Kafka.ConfigMapEntryR\tconfigMap\x12*\n" +
	"\x11auto_offset_reset\x18\f \x01(\tR\x0fautoOffsetReset\x1a<\n" +
	"\x0eConfigMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"J\n" +
	"\aMongodb\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\tR\x04mode\x12\x19\n" +
	"\bis_debug\x18\x03 \x01(\bR\aisDebug\"@\n" +
	"\x0eTracerExporter\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x16\n" +
	"\x06sample\x18\x02 \x01(\x01R\x06sample\"w\n" +
	"\tOssConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\"\n" +
	"\raccess_key_id\x18\x02 \x01(\tR\vaccessKeyId\x12*\n" +
	"\x11access_key_secret\x18\x03 \x01(\tR\x0faccessKeySecret\"\xc4\x01\n" +
	"\x06Logger\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12\x19\n" +
	"\bmax_size\x18\x04 \x01(\x05R\amaxSize\x12\x17\n" +
	"\amax_age\x18\x05 \x01(\x05R\x06maxAge\x12\x1f\n" +
	"\vis_compress\x18\x06 \x01(\bR\n" +
	"isCompress\x12\x1f\n" +
	"\vbackup_nums\x18\a \x01(\x05R\n" +
	"backupNumsB,Z*github.com/welltop-cn/common/protos;protosb\x06proto3"

var (
	file_protos_protos_proto_rawDescOnce sync.Once
	file_protos_protos_proto_rawDescData []byte
)

func file_protos_protos_proto_rawDescGZIP() []byte {
	file_protos_protos_proto_rawDescOnce.Do(func() {
		file_protos_protos_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_protos_proto_rawDesc), len(file_protos_protos_proto_rawDesc)))
	})
	return file_protos_protos_proto_rawDescData
}

var file_protos_protos_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_protos_protos_proto_goTypes = []any{
	(*ErrorCode)(nil),      // 0: protos.ErrorCode
	(*Mysql)(nil),          // 1: protos.Mysql
	(*Redis)(nil),          // 2: protos.Redis
	(*Elasticsearch)(nil),  // 3: protos.Elasticsearch
	(*Kafka)(nil),          // 4: protos.Kafka
	(*Mongodb)(nil),        // 5: protos.Mongodb
	(*TracerExporter)(nil), // 6: protos.TracerExporter
	(*OssConfig)(nil),      // 7: protos.OssConfig
	(*Logger)(nil),         // 8: protos.Logger
	nil,                    // 9: protos.Kafka.ConfigMapEntry
}
var file_protos_protos_proto_depIdxs = []int32{
	9, // 0: protos.Kafka.config_map:type_name -> protos.Kafka.ConfigMapEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protos_protos_proto_init() }
func file_protos_protos_proto_init() {
	if File_protos_protos_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_protos_proto_rawDesc), len(file_protos_protos_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_protos_proto_goTypes,
		DependencyIndexes: file_protos_protos_proto_depIdxs,
		MessageInfos:      file_protos_protos_proto_msgTypes,
	}.Build()
	File_protos_protos_proto = out.File
	file_protos_protos_proto_goTypes = nil
	file_protos_protos_proto_depIdxs = nil
}
